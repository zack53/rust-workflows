name: Release

on:
  workflow_call:
    inputs:
      RELEASE_ENVIRONMENT:
        type: string
        description: 'tag to deploy'
        required: true
      DOCKER_USERNAME:
        type: string
        description: 'docker username'
        required: true
    secrets:
      PAT:
        required: true
      DOCKER_PASSWORD:
        required: true

env:
  NEW_TAG: ${{ github.ref_name }}
  RELEASE_ENVIRONMENT: ${{ inputs.RELEASE_ENVIRONMENT }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    uses:  ./.github/workflows/ci-build-test.yml
    secrets:
      PAT: ${{ secrets.PAT }}

  push-cr-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: docker/metadata-action@v3
        id: metadata
        with:
          images: ${{ github.repository }}
      - uses: docker/login-action@v1
        with:
          username: ${{ inputs.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - uses: int128/kaniko-action@v1
        with:
          build-args: PAT=${{ secrets.PAT }}
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  update-argocd-repo:
    runs-on: ubuntu-latest
    needs: push-cr-image
    steps:
      - run: git config --global --add safe.directory *
      - name: checkout repo
        uses: actions/checkout@v3.1.0
        with:
          repository: zack53/argocd-manifests
          token: ${{ secrets.PAT }}
      - name: Change tag version
        run: |
          sed -E 's/:v[0-9]+.*/:'$NEW_TAG'/' apps/$REPO_NAME/overlays/$RELEASE_ENVIRONMENT/image.yaml
          sed -i -E 's/:v[0-9]+.*/:'$NEW_TAG'/' apps/$REPO_NAME/overlays/$RELEASE_ENVIRONMENT/image.yaml
      - name: Update Argo Cd tag version
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "GitHub Actions [Bot]"
          git add apps/$REPO_NAME/overlays/$RELEASE_ENVIRONMENT/image.yaml 
          git commit -m "release ${{ github.repository }} version $NEW_TAG"
          git push

